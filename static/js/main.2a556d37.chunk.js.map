{"version":3,"sources":["cardGet.js","App.js","serviceWorker.js","index.js","img/whale.gif"],"names":["url","resurl","rar","a","focus","gach","fetch","toString","response","json","gachData","cardList","details","filter","card","rarityIndex","pickup","id","Math","floor","random","length","situationId","response2","cardData","imgurl","cardGroup","cardRes","attr","characterId","title","groupId","trunc","repeat","App","props","componentDidMount","then","resp","console","log","data","list","gachaName","includes","paymentMethods","gacha","slice","reverse","map","two","three","four","i","value","gachaId","display","setState","gachaList","selectedGacha","focusAmount","catch","error","handleGacha","e","parseInt","target","handleRoll","res","state","rate","focusRoll","getCard","whale","src","width","height","handleRollTen","q","rollTen","n","r","m","x","focus4","focus3","focus2","handleDF","checked","handleReset","df","gachList","selected","initialState","rarity","queue","stars","className","getFromGacha","shift","push","href","this","dark","onChange","key","type","onClick","for","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2a556d37.chunk.js","sourcesContent":["let region = 'en';\r\n// let url = 'https://api.bandori.ga/v1/' + region + '/';\r\nlet url = 'https://bestdori.com/api/'\r\nlet resurl = 'https://res.bandori.ga/assets-' + region + '/thumb/chara/card'\r\n\r\nexport async function getFromGacha(rar, focus=false, gach) {\r\n\tlet response = await fetch(url + 'gacha/' + gach.toString() + '.json');\r\n\tlet gachData = await response.json();\r\n\r\n\tlet cardList = gachData.details.filter(function (card) {\r\n\t\tif (focus) {return card.rarityIndex===rar && card.pickup===true;}\r\n\t\telse {return card.rarityIndex===rar && card.pickup===false;}\r\n\t});\r\n\tlet id = Math.floor(Math.random() * (cardList.length));\r\n\t// console.log(cardList.length, id)\r\n\tlet card = cardList[id];\r\n\t// console.log(card, rar, focus);\r\n\r\n\tlet response2 = await fetch(url + 'cards/' + card.situationId + '.json');\r\n\tlet cardData = await response2.json();\r\n\r\n\tlet imgurl = resurl + cardGroup(card.situationId) + '_rip/' + cardData.cardRes + '_normal.png';\r\n\r\n\treturn [imgurl, cardData.attr, Math.floor((cardData.characterId - 1) / 5) + 1, cardData.title, card.situationId];\r\n}\r\n\r\nfunction cardGroup(id) {\r\n\tconst groupId = Math.trunc(id / 50).toString()\r\n    return '0'.repeat(5 - groupId.length) + groupId;\r\n}\r\n\r\n// export async function get(rng, rar) {\r\n// \tlet response = await fetch(url + 'card/');\r\n// \tlet cardData = await response.json();\r\n\r\n// \tlet cardList = cardData.data.filter(function (card) {\r\n// \t\tif (rar >= 3) {\r\n// \t\t\treturn card.rarity === rar && card.hasOwnProperty('gachaText');\r\n// \t\t} else {\r\n// \t\t\treturn card.rarity === rar;\r\n// \t\t}\r\n\t\t\r\n// \t});\r\n// \t// console.log(cardList.length)\r\n// \tlet id = Math.floor(rng * cardList.length);\r\n// \t// console.log(id)\r\n// \tlet card = cardList[id];\r\n// \tconsole.log(card.cardId);\r\n\r\n// \tlet imgurl = resurl + cardGroup(card.cardId) + '_rip/' + card.cardRes + '_normal.png';\r\n// \t// let charname = charList[card.characterId - 1].characterName;\r\n\r\n// \treturn [imgurl];\r\n// }","import React from 'react';\r\nimport whale from './img/whale.gif'\r\nimport './App.css';\r\nimport {getFromGacha} from './cardGet';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      rate: 0.03,\r\n      two: 0,\r\n      three: 0,\r\n      four: 0,\r\n      focus4: 0,\r\n      focus3: 0,\r\n      focus2: 0,\r\n      q: [],\r\n      whale: '',\r\n      gachaList: [{display: 'Loading Gacha List...'}],\r\n      selectedGacha: 5,\r\n      focusAmount: [0, 0, 0]\r\n    }\r\n    this.state = this.initialState\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch('https://api.bandori.ga/v1/en/gacha')\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(resp => {\r\n        console.log(resp.data);\r\n        let list = resp.data.filter(gach => {\r\n          if (gach.gachaName.includes('Ticket') || gach.gachaName.includes('Type') || \r\n            gach.gachaName.includes('Step Up') || gach.paymentMethods.length < 2) {\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n\r\n        console.log(list);\r\n\r\n        let gacha = list.slice(0).reverse().map(gach => {\r\n          let two = 0;\r\n          let three = 0;\r\n          let four = 0;\r\n\r\n          let focus = gach.details.filter(card => {\r\n            return card.pickup === true;\r\n          })\r\n          for (var i = 0; i < focus.length; i++) {\r\n            if (focus[i].rarityIndex === 2) {two++;}\r\n            else if (focus[i].rarityIndex === 3) {three++;}\r\n            else {four++;}\r\n          }\r\n\r\n          return {value: gach.gachaId, display: gach.gachaName, focus: [two, three, four]}\r\n        });\r\n        \r\n        this.setState({\r\n          gachaList: gacha,\r\n          selectedGacha: gacha[0].value,\r\n          focusAmount: gacha[0].focus\r\n        });\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  handleGacha = (e) => {\r\n    this.setState({\r\n      selectedGacha: parseInt(e.target.value.slice(6)), \r\n      focusAmount: [parseInt(e.target.value[0]), parseInt(e.target.value[2]), parseInt(e.target.value[4])]\r\n    });\r\n  }\r\n\r\n  handleRoll = (e) => {\r\n    var random = Math.random();\r\n    var res = '';\r\n\r\n    if (random <= this.state.rate) {\r\n      if (this.focusRoll(4, random)) {this.getCard(4, true);}\r\n      else {this.getCard(4);}\r\n      res = '4'\r\n      this.setState(state => {return {four: state.four + 1}});\r\n    } else if (random > this.state.rate && random <= this.state.rate + 0.085) {\r\n      if (this.focusRoll(3, random)) {this.getCard(3, true);}\r\n      else {this.getCard(3)};\r\n      res = '3'\r\n      this.setState(state => {return {three: state.three + 1}});\r\n    } else {\r\n      if (this.focusRoll(2, random)) {this.getCard(2, true);}\r\n      else {this.getCard(2);}\r\n      res = '2';\r\n      this.setState(state => {return {two: state.two + 1}});\r\n    }\r\n\r\n    if (this.state.two + this.state.three + this.state.four === 100) {\r\n      this.setState({whale: <img src={whale} width='20px' height='20px'/>})\r\n    }\r\n    return res;\r\n  }\r\n\r\n  handleRollTen = async (e) => {\r\n    await this.setState(state => {return {q: []}});\r\n    this.rollTen();\r\n  }\r\n\r\n  rollTen = () => {\r\n    var res = '';\r\n    for (var i = 0; i < 9; i++) {\r\n      res = res + ' ' + this.handleRoll();\r\n    }\r\n\r\n    if (res.includes('3') || res.includes('4')) {res = this.handleRoll() + res;} \r\n    else {\r\n      var random = Math.random();    \r\n      if (random <= this.state.rate) {\r\n        if (this.focusRoll(4, random)) {this.getCard(4, true);} \r\n        else {this.getCard(4);}\r\n        this.setState(state => {return {four: state.four + 1}});\r\n      } else {\r\n        if (this.focusRoll(3, random, 0.13695)) {this.getCard(3, true);}\r\n        else {this.getCard(3);}\r\n        this.setState(state => {return {three: state.three + 1}});\r\n      }\r\n    }\r\n  }\r\n\r\n  focusRoll = (n, r, m = 0.012) => {\r\n    // n: rarity, r = rng, m = focus rate for 3* (primarily for guaranteed 3* roll)\r\n    var rate = 0;\r\n    var focus = 'focus' + n.toString();\r\n\r\n    if (n === 4) {rate = 0.005 * this.state.focusAmount[2];} \r\n    else if (n === 3) {rate = (this.state.rate + m) * this.state.focusAmount[1];} \r\n    else {rate = (this.state.rate + 0.085 + 0.096) * this.state.focusAmount[0];}\r\n\r\n    if (r <= rate) {\r\n      this.setState(state => {\r\n        var x;\r\n        if (n === 4) {x = state.focus4;}\r\n        else if (n === 3) {x = state.focus3;}\r\n        else {x = state.focus2;}\r\n        return {[focus]: x + 1}}\r\n        )\r\n      return true;\r\n    } else {return false;}\r\n  }\r\n\r\n  handleDF = (e) => {\r\n    var checked = e.target.checked;\r\n    if (checked) {this.setState(state => {return {rate: 0.06}});}\r\n    else {this.setState(state => {return {rate: 0.03}});}\r\n  }\r\n\r\n  handleReset = (e) => {\r\n    let df = this.state.rate;\r\n    let gachList = this.state.gachaList;\r\n    let selected = this.state.selectedGacha;\r\n    let focus = this.state.focusAmount;\r\n    this.setState(state => {\r\n      return this.initialState;\r\n    });\r\n    this.setState({\r\n      q: [],\r\n      gachaList: gachList,\r\n      selectedGacha: selected,\r\n      focusAmount: focus\r\n    })\r\n    if (df === 0.06) {\r\n      this.setState(state => {return {rate: 0.06}});\r\n    }\r\n  }\r\n\r\n  // spark = (e) => {\r\n  //   for (var i = 0; i < 30; i++) {\r\n  //     this.handleRollTen();\r\n  //   }\r\n  //   this.setState(state => {return {rng: 'Sparked!'}});\r\n  // }\r\n\r\n  getCard = (rarity, focus) => {\r\n    var queue = this.state.q;\r\n    var stars = <div></div>;\r\n\r\n    if (rarity === 4) {\r\n      stars = <div><div className='thumb-rarity-0-1'> </div>\r\n            <div className='thumb-rarity-0-2'> </div>\r\n            <div className='thumb-rarity-0-3'> </div>\r\n            <div className='thumb-rarity-0-4'> </div></div>;\r\n    } else if (rarity === 3) {\r\n      stars = <div><div className='thumb-rarity-0-1'> </div>\r\n            <div className='thumb-rarity-0-2'> </div>\r\n            <div className='thumb-rarity-0-3'> </div></div>;\r\n    } else if (rarity === 2) {\r\n      stars = <div><div className='thumb-rarity-0-1'> </div>\r\n            <div className='thumb-rarity-0-2'> </div></div>;\r\n    } else {\r\n      stars = <div></div>;\r\n    }\r\n\r\n    getFromGacha(rarity, focus, this.state.selectedGacha)\r\n      .then(url => {\r\n        if (queue.length === 10) {queue.shift()};\r\n        queue.push(\r\n          <a href={'https://bestdori.com/info/cards/' + url[4]} target='_blank'>\r\n            <div className='thumb-parent' title={url[3]}>\r\n              <img src={url[0]} height='100' width='100'/>\r\n              <div className={'thumb-frame-' + rarity.toString()}> </div>\r\n              <div className={'thumb-attr-' + url[1]}> </div>\r\n              <div className={'thumb-band-' + url[2]}> </div>\r\n              {stars}\r\n            </div>\r\n          </a>\r\n          );\r\n\r\n        this.setState({\r\n          q:queue\r\n        })\r\n      }\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={\"App \" + this.state.dark}>\r\n        <div className='parent'>\r\n          <h3>Total: {this.state.two + this.state.three + this.state.four} ({this.state.focus2 + this.state.focus3 + this.state.focus4})</h3>\r\n          <h5>4☆: {this.state.four} ({this.state.focus4})  3☆: {this.state.three} ({this.state.focus3})  2☆: {this.state.two} ({this.state.focus2})</h5>\r\n          <div>Total stars spent: {(this.state.two + this.state.three + this.state.four) * 250}\r\n            &#160;{this.state.whale}</div>\r\n          <div className='results'>{this.state.q}</div>\r\n          <div>\r\n            <select className='btn btn-sm gachalist' onChange={this.handleGacha}>\r\n              {this.state.gachaList.map((gach) => \r\n                <option key={gach.value} value={[gach.focus, gach.value]}>{gach.display}</option>\r\n                )}\r\n            </select>\r\n          </div>\r\n          <div>Current 4☆ rate is {this.state.rate * 100}%</div>\r\n          <div>\r\n            <div className=\"custom-switch dreamfes\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultUnchecked\" onClick={this.handleDF}/>\r\n                <label className=\"custom-control-label unselectable\" for=\"defaultUnchecked\">DreamFes</label>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button className='btn rollbutton' onClick={this.handleRoll}> Roll </button>\r\n            <button className='btn rollbutton' onClick={this.handleRollTen}> Roll 10 </button>\r\n            {/*<button onClick={this.spark}> Spark! </button><br/>*/}\r\n            <br/>\r\n            <button className='btn btn-secondary' onClick={this.handleReset}> Reset </button>\r\n          </div>       \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/whale.17edc0ad.gif\";"],"sourceRoot":""}