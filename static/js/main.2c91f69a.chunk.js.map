{"version":3,"sources":["cardGet.js","App.js","serviceWorker.js","index.js","img/whale.gif"],"names":["url","resurl","cardGroup","id","groupId","Math","trunc","toString","repeat","length","App","props","componentDidMount","fetch","then","response","json","resp","gacha","data","filter","gach","gachaName","includes","paymentMethods","slice","reverse","map","two","three","four","focus","details","card","pickup","i","rarityIndex","value","gachaId","display","setState","gachaList","selectedGacha","focusAmount","catch","error","console","log","handleGacha","e","parseInt","target","handleRoll","random","res","state","rate","focusRoll","getCard","whale","src","width","height","handleRollTen","a","async","q","rollTen","n","r","m","x","focus4","focus3","focus2","handleDF","checked","handleReset","df","gachList","selected","initialState","rarity","queue","stars","className","rar","gachData","cardList","floor","situationId","response2","cardData","imgurl","cardRes","attr","characterId","title","getFromGacha","shift","push","href","this","onChange","key","type","onClick","for","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2c91f69a.chunk.js","sourcesContent":["let region = 'en';\r\nlet url = 'https://api.bandori.ga/v1/' + region + '/';\r\nlet resurl = 'https://res.bandori.ga/assets-' + region + '/thumb/chara/card'\r\n\r\nexport async function getFromGacha(rar, focus=false, gach) {\r\n\tlet response = await fetch(url + 'gacha/' + gach.toString());\r\n\tlet gachData = await response.json();\r\n\r\n\tlet cardList = gachData.details.filter(function (card) {\r\n\t\tif (focus) {return card.rarityIndex===rar && card.pickup===true;}\r\n\t\telse {return card.rarityIndex===rar && card.pickup===false;}\r\n\t});\r\n\tlet id = Math.floor(Math.random() * (cardList.length));\r\n\t// console.log(cardList.length, id)\r\n\tlet card = cardList[id];\r\n\t// console.log(card, rar, focus);\r\n\r\n\tlet response2 = await fetch(url + 'card/' + card.situationId);\r\n\tlet cardData = await response2.json();\r\n\r\n\tlet imgurl = resurl + cardGroup(card.situationId) + '_rip/' + cardData.cardRes + '_normal.png';\r\n\r\n\treturn [imgurl, cardData.attr, Math.floor((cardData.characterId - 1) / 5) + 1, cardData.title, card.situationId];\r\n}\r\n\r\nfunction cardGroup(id) {\r\n\tconst groupId = Math.trunc(id / 50).toString()\r\n    return '0'.repeat(5 - groupId.length) + groupId;\r\n}\r\n\r\n// export async function get(rng, rar) {\r\n// \tlet response = await fetch(url + 'card/');\r\n// \tlet cardData = await response.json();\r\n\r\n// \tlet cardList = cardData.data.filter(function (card) {\r\n// \t\tif (rar >= 3) {\r\n// \t\t\treturn card.rarity === rar && card.hasOwnProperty('gachaText');\r\n// \t\t} else {\r\n// \t\t\treturn card.rarity === rar;\r\n// \t\t}\r\n\t\t\r\n// \t});\r\n// \t// console.log(cardList.length)\r\n// \tlet id = Math.floor(rng * cardList.length);\r\n// \t// console.log(id)\r\n// \tlet card = cardList[id];\r\n// \tconsole.log(card.cardId);\r\n\r\n// \tlet imgurl = resurl + cardGroup(card.cardId) + '_rip/' + card.cardRes + '_normal.png';\r\n// \t// let charname = charList[card.characterId - 1].characterName;\r\n\r\n// \treturn [imgurl];\r\n// }","import React from 'react';\r\nimport whale from './img/whale.gif'\r\nimport './App.css';\r\nimport {getFromGacha} from './cardGet';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      rate: 0.03,\r\n      two: 0,\r\n      three: 0,\r\n      four: 0,\r\n      focus4: 0,\r\n      focus3: 0,\r\n      focus2: 0,\r\n      q: [],\r\n      whale: '',\r\n      gachaList: [{display: 'Loading Gacha List...'}],\r\n      selectedGacha: 5,\r\n      focusAmount: [0, 0, 0]\r\n    }\r\n    this.state = this.initialState\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch('https://api.bandori.ga/v1/en/gacha')\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(resp => {\r\n        let list = resp.data.filter(gach => {\r\n          if (gach.gachaName.includes('Ticket') || gach.gachaName.includes('Type') || \r\n            gach.gachaName.includes('Step Up') || gach.paymentMethods.length < 2) {\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n\r\n        let gacha = list.slice(0).reverse().map(gach => {\r\n          let two = 0;\r\n          let three = 0;\r\n          let four = 0;\r\n\r\n          let focus = gach.details.filter(card => {\r\n            return card.pickup === true;\r\n          })\r\n          for (var i = 0; i < focus.length; i++) {\r\n            if (focus[i].rarityIndex === 2) {two++;}\r\n            else if (focus[i].rarityIndex === 3) {three++;}\r\n            else {four++;}\r\n          }\r\n\r\n          return {value: gach.gachaId, display: gach.gachaName, focus: [two, three, four]}\r\n        });\r\n        \r\n        this.setState({\r\n          gachaList: gacha,\r\n          selectedGacha: gacha[0].value,\r\n          focusAmount: gacha[0].focus\r\n        });\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  handleGacha = (e) => {\r\n    this.setState({\r\n      selectedGacha: parseInt(e.target.value.slice(6)), \r\n      focusAmount: [parseInt(e.target.value[0]), parseInt(e.target.value[2]), parseInt(e.target.value[4])]\r\n    });\r\n  }\r\n\r\n  handleRoll = (e) => {\r\n    var random = Math.random();\r\n    var res = '';\r\n\r\n    if (random <= this.state.rate) {\r\n      if (this.focusRoll(4, random)) {this.getCard(4, true);}\r\n      else {this.getCard(4);}\r\n      res = '4'\r\n      this.setState(state => {return {four: state.four + 1}});\r\n    } else if (random > this.state.rate && random <= this.state.rate + 0.085) {\r\n      if (this.focusRoll(3, random)) {this.getCard(3, true);}\r\n      else {this.getCard(3)};\r\n      res = '3'\r\n      this.setState(state => {return {three: state.three + 1}});\r\n    } else {\r\n      if (this.focusRoll(2, random)) {this.getCard(2, true);}\r\n      else {this.getCard(2);}\r\n      res = '2';\r\n      this.setState(state => {return {two: state.two + 1}});\r\n    }\r\n\r\n    if (this.state.two + this.state.three + this.state.four === 100) {\r\n      this.setState({whale: <img src={whale} width='20px' height='20px'/>})\r\n    }\r\n    return res;\r\n  }\r\n\r\n  handleRollTen = async (e) => {\r\n    await this.setState(state => {return {q: []}});\r\n    this.rollTen();\r\n  }\r\n\r\n  rollTen = () => {\r\n    var res = '';\r\n    for (var i = 0; i < 9; i++) {\r\n      res = res + ' ' + this.handleRoll();\r\n    }\r\n\r\n    if (res.includes('3') || res.includes('4')) {res = this.handleRoll() + res;} \r\n    else {\r\n      var random = Math.random();    \r\n      if (random <= this.state.rate) {\r\n        if (this.focusRoll(4, random)) {this.getCard(4, true);} \r\n        else {this.getCard(4);}\r\n        this.setState(state => {return {four: state.four + 1}});\r\n      } else {\r\n        if (this.focusRoll(3, random, 0.13695)) {this.getCard(3, true);}\r\n        else {this.getCard(3);}\r\n        this.setState(state => {return {three: state.three + 1}});\r\n      }\r\n    }\r\n  }\r\n\r\n  focusRoll = (n, r, m = 0.012) => {\r\n    // n: rarity, r = rng, m = focus rate for 3* (primarily for guaranteed 3* roll)\r\n    var rate = 0;\r\n    var focus = 'focus' + n.toString();\r\n\r\n    if (n === 4) {rate = 0.005 * this.state.focusAmount[2];} \r\n    else if (n === 3) {rate = (this.state.rate + m) * this.state.focusAmount[1];} \r\n    else {rate = (this.state.rate + 0.085 + 0.096) * this.state.focusAmount[0];}\r\n\r\n    if (r <= rate) {\r\n      this.setState(state => {\r\n        var x;\r\n        if (n === 4) {x = state.focus4;}\r\n        else if (n === 3) {x = state.focus3;}\r\n        else {x = state.focus2;}\r\n        return {[focus]: x + 1}}\r\n        )\r\n      return true;\r\n    } else {return false;}\r\n  }\r\n\r\n  handleDF = (e) => {\r\n    var checked = e.target.checked;\r\n    if (checked) {this.setState(state => {return {rate: 0.06}});}\r\n    else {this.setState(state => {return {rate: 0.03}});}\r\n  }\r\n\r\n  handleReset = (e) => {\r\n    let df = this.state.rate;\r\n    let gachList = this.state.gachaList;\r\n    let selected = this.state.selectedGacha;\r\n    let focus = this.state.focusAmount;\r\n    this.setState(state => {\r\n      return this.initialState;\r\n    });\r\n    this.setState({\r\n      q: [],\r\n      gachaList: gachList,\r\n      selectedGacha: selected,\r\n      focusAmount: focus\r\n    })\r\n    if (df === 0.06) {\r\n      this.setState(state => {return {rate: 0.06}});\r\n    }\r\n  }\r\n\r\n  // spark = (e) => {\r\n  //   for (var i = 0; i < 30; i++) {\r\n  //     this.handleRollTen();\r\n  //   }\r\n  //   this.setState(state => {return {rng: 'Sparked!'}});\r\n  // }\r\n\r\n  getCard = (rarity, focus) => {\r\n    var queue = this.state.q;\r\n    var stars = <div></div>;\r\n\r\n    if (rarity === 4) {\r\n      stars = <div><div className='thumb-rarity-0-1'> </div>\r\n            <div className='thumb-rarity-0-2'> </div>\r\n            <div className='thumb-rarity-0-3'> </div>\r\n            <div className='thumb-rarity-0-4'> </div></div>;\r\n    } else if (rarity === 3) {\r\n      stars = <div><div className='thumb-rarity-0-1'> </div>\r\n            <div className='thumb-rarity-0-2'> </div>\r\n            <div className='thumb-rarity-0-3'> </div></div>;\r\n    } else if (rarity === 2) {\r\n      stars = <div><div className='thumb-rarity-0-1'> </div>\r\n            <div className='thumb-rarity-0-2'> </div></div>;\r\n    } else {\r\n      stars = <div></div>;\r\n    }\r\n\r\n    getFromGacha(rarity, focus, this.state.selectedGacha)\r\n      .then(url => {\r\n        if (queue.length === 10) {queue.shift()};\r\n        queue.push(\r\n          <a href={'https://bestdori.com/info/cards/' + url[4]} target='_blank'>\r\n            <div className='thumb-parent' title={url[3]}>\r\n              <img src={url[0]} height='100' width='100'/>\r\n              <div className={'thumb-frame-' + rarity.toString()}> </div>\r\n              <div className={'thumb-attr-' + url[1]}> </div>\r\n              <div className={'thumb-band-' + url[2]}> </div>\r\n              {stars}\r\n            </div>\r\n          </a>\r\n          );\r\n\r\n        this.setState({\r\n          q:queue\r\n        })\r\n      }\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className='parent'>\r\n          <h3>Total: {this.state.two + this.state.three + this.state.four} ({this.state.focus2 + this.state.focus3 + this.state.focus4})</h3>\r\n          <div>4☆: {this.state.four} ({this.state.focus4})  3☆: {this.state.three} ({this.state.focus3})  2☆: {this.state.two} ({this.state.focus2})</div>\r\n\r\n          <div className='results'>{this.state.q}</div>\r\n          \r\n          <div>\r\n            Total stars spent: {(this.state.two + this.state.three + this.state.four) * 250}\r\n            &#160;{this.state.whale}<br/>\r\n            Current 4☆ rate is {this.state.rate * 100}%\r\n          </div>\r\n\r\n          <div>\r\n            <select className='btn btn-sm gachalist' onChange={this.handleGacha}>\r\n              {this.state.gachaList.map((gach) => \r\n                <option key={gach.value} value={[gach.focus, gach.value]}>{gach.display}</option>\r\n                )}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <div className=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultUnchecked\" onClick={this.handleDF}/>\r\n                <label className=\"custom-control-label\" for=\"defaultUnchecked\">DreamFes</label>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button className='btn rollbutton' onClick={this.handleRoll}> Roll </button>\r\n            <button className='btn rollbutton' onClick={this.handleRollTen}> Roll 10 </button>\r\n            {/*<button onClick={this.spark}> Spark! </button><br/>*/}\r\n            <br/>\r\n            <button className='btn btn-secondary' onClick={this.handleReset}> Reset </button>\r\n          </div>       \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/whale.17edc0ad.gif\";"],"sourceRoot":""}