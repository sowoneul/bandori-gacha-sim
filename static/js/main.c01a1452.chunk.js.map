{"version":3,"sources":["img/tsugunomoney.gif","img/whale.gif","img/tsugumoney.gif","Card.js","cardGet.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","stars","rarity","className","state","href","this","id","target","rel","title","name","src","image","alt","toString","attr","band","React","Component","rar","a","focus","gach","region","url","resurl","fetch","response","json","gachData","cardList","details","filter","card","rarityIndex","pickup","undefined","Math","floor","random","length","situationId","response2","cardData","console","log","imgurl","cardGroup","resourceSetName","attribute","characterId","groupId","trunc","repeat","App","componentDidMount","getGachaList","handleRegion","e","handleReset","setState","value","then","resp","gacha","data","gachaName","includes","paymentMethods","slice","reverse","map","disp","two","three","four","i","gachaId","display","gachaList","selectedGacha","focusAmount","gachaimg","catch","error","handleGacha","gachId","parseInt","handleRoll","res","rate","getCard","focusRoll","total","tsugu","tsugumoney","whale","width","height","handleRollTen","q","rollTen","n","r","m","x","focus4","focus3","focus2","handleDF","checked","queue","getFromGacha","shift","push","handleHoverIn","handleHoverOut","onMouseEnter","onMouseLeave","round","onChange","key","type","onClick","htmlFor","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c01a1452.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tsugunomoney.a698363a.gif\";","module.exports = __webpack_public_path__ + \"static/media/whale.17edc0ad.gif\";","module.exports = __webpack_public_path__ + \"static/media/tsugumoney.0eee08a4.gif\";","import React from 'react';\r\nimport './App.css';\r\n\r\nclass Card extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\t// determine how many stars to display on card thumbnail\r\n\t\tvar stars;\r\n    if (this.props.rarity === 4) {\r\n      stars = <div><div className='thumb-rarity-0-1'> </div>\r\n            <div className='thumb-rarity-0-2'> </div>\r\n            <div className='thumb-rarity-0-3'> </div>\r\n            <div className='thumb-rarity-0-4'> </div></div>;\r\n    } else if (this.props.rarity === 3) {\r\n      stars = <div><div className='thumb-rarity-0-1'> </div>\r\n            <div className='thumb-rarity-0-2'> </div>\r\n            <div className='thumb-rarity-0-3'> </div></div>;\r\n    } else if (this.props.rarity === 2) {\r\n      stars = <div><div className='thumb-rarity-0-1'> </div>\r\n            <div className='thumb-rarity-0-2'> </div></div>;\r\n    } else {\r\n      stars = <div></div>;\r\n    }\r\n    this.state = {stars: stars};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<a href={'https://bestdori.com/info/cards/' + this.props.id} target='_blank' rel=\"noopener noreferrer\">\r\n        <div className='thumb-parent' title={this.props.name}>\r\n          <img src={this.props.image} className='thumb-img' alt=''/>\r\n          <div className={'thumb-frame-' + this.props.rarity.toString()}> </div>\r\n          <div className={'thumb-attr-' + this.props.attr}> </div>\r\n          <div className={'thumb-band-' + this.props.band}> </div>\r\n          {this.state.stars}\r\n        </div>\r\n      </a>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Card;\r\n\r\n// Old Code\r\n// <a href={'https://bestdori.com/info/cards/' + url[4]} target='_blank' rel=\"noopener noreferrer\">\r\n  // <div className='thumb-parent' title={url[3]}>\r\n    // <img src={url[0]} height='100' width='100' alt=''/>\r\n    // <div className={'thumb-frame-' + rarity.toString()}> </div>\r\n    // <div className={'thumb-attr-' + url[1]}> </div>\r\n    // <div className={'thumb-band-' + url[2]}> </div>\r\n    // {stars}\r\n  // </div>\r\n// </a>","export async function getFromGacha(rar, focus=false, gach, region='en') {\r\n\t// calls to bandori.ga api to retrieve cards\r\n\tlet url = 'https://api.bandori.top/v2/' + region + '/';\r\n\t// let resurl = 'https://res.bandori.top/assets-' + region + '/thumb/chara/card'\r\n\tlet resurl = 'https://res.bandori.top/file/bandori-assets/' + 'jp' + '/thumb/chara/card'\r\n\t// console.log(rar, focus, gach, region);\r\n\r\n\t// find all cards available in selected gacha & filter out focus cards if needed\r\n\tlet response = await fetch(url + 'gacha/' + gach.toString());\r\n\tlet gachData = await response.json();\r\n\tlet cardList = gachData.details.filter(function (card) {\r\n\t\tif (focus) {return card.rarityIndex===rar && card.pickup===true;}\r\n\t\telse {return card.rarityIndex===rar && (card.pickup===false || card.pickup==undefined);}\r\n\t});\r\n\t// console.log(cardList);\r\n\t\r\n\t// get a single card from the generated list\r\n\tlet id = Math.floor(Math.random() * (cardList.length));\r\n\t// console.log(id);\r\n\tlet card = cardList[id];\r\n\t// console.log(card);\r\n\tlet response2 = await fetch(url + 'card/' + card.situationId);\r\n\tlet cardData = await response2.json();\r\n\tconsole.log(cardData);\r\n\r\n\t// get img resource for card\r\n\tlet imgurl = resurl + cardGroup(card.situationId) + '_rip/' + cardData.resourceSetName + '_normal.webp';\r\n\r\n\treturn [imgurl, cardData.attribute, Math.floor((cardData.characterId - 1) / 5) + 1, cardData.title, card.situationId];\r\n}\r\n\r\nfunction cardGroup(id) {\r\n\tconst groupId = Math.trunc(id / 50).toString()\r\n    return '0'.repeat(5 - groupId.length) + groupId;\r\n}","import React from 'react';\r\nimport Card from './Card';\r\nimport {getFromGacha} from './cardGet';\r\nimport './App.css';\r\nimport whale from './img/whale.gif'\r\nimport tsugu from './img/tsugunomoney.gif'\r\nimport tsugumoney from './img/tsugumoney.gif'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rate: 0.03,\r\n      two: 0,\r\n      three: 0,\r\n      four: 0,\r\n      total: 0,\r\n      focus4: 0,\r\n      focus3: 0,\r\n      focus2: 0,\r\n      q: [],\r\n      region: 'en',\r\n      gachaList: [{display: 'Loading Gacha List...'}],\r\n      selectedGacha: 5,\r\n      focusAmount: [0, 0, 0],\r\n      gachaimg: '',\r\n      whale: '',\r\n      tsugu: tsugu\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getGachaList(this.state.region);\r\n  }\r\n\r\n  handleRegion = (e) => {\r\n    // change between server regions\r\n    this.handleReset();\r\n    this.setState({region: e.target.value});\r\n    this.getGachaList(e.target.value);\r\n  }\r\n\r\n  getGachaList = (region) => {\r\n    // build gacha dropdown list\r\n    fetch('https://api.bandori.top/v2/' + region + '/gacha')\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(resp => {\r\n        // filter out special gachas\r\n        let list = resp.data.filter(gach => {\r\n          if (gach.gachaName.includes('★') || gach.gachaName.includes('Type') || \r\n            gach.gachaName.includes('Step Up') ||  gach.gachaName.includes('タイプ') ||\r\n            gach.paymentMethods.length < 2) {\r\n            return false;\r\n          }\r\n          if (!gach.details || !gach) {return false;}\r\n          return true;\r\n        });\r\n\r\n        // find # of focus cards in each gacha, add ID tag, convert to new object\r\n        let gacha = list.slice(0).reverse().map(gach => {          \r\n          let two = 0;\r\n          let three = 0;\r\n          let four = 0;\r\n\r\n          let focus = gach.details.filter(card => {\r\n            return card.pickup === true;\r\n          })\r\n          for (let i = 0; i < focus.length; i++) {\r\n            if (focus[i].rarityIndex === 2) {two++;}\r\n            else if (focus[i].rarityIndex === 3) {three++;}\r\n            else {four++;}\r\n          }\r\n\r\n          let disp\r\n          if (region === 'jp') {\r\n            disp = gach.gachaId.toString() + ' - ' + gach.gachaName;\r\n          } else {\r\n            disp = gach.gachaName\r\n          }\r\n\r\n          return {value: gach.gachaId, display: disp, focus: [two, three, four]}\r\n        });\r\n        \r\n        // store newly created gacha database in state\r\n        this.setState({\r\n          gachaList: gacha,\r\n          selectedGacha: gacha[0].value,\r\n          focusAmount: gacha[0].focus,\r\n          gachaimg: 'https://bestdori.com/assets/' + this.state.region + '/homebanner_rip/banner_gacha' + gacha[0].value + '.png'\r\n        });\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  handleGacha = (e) => {\r\n    // switch current gacha banner\r\n    let gachId = parseInt(e.target.value.slice(6));\r\n    this.setState({\r\n      selectedGacha: gachId, \r\n      focusAmount: [parseInt(e.target.value[0]), parseInt(e.target.value[2]), parseInt(e.target.value[4])],\r\n      gachaimg: 'https://bestdori.com/assets/' + this.state.region + '/homebanner_rip/banner_gacha' + gachId + '.png'\r\n    });\r\n  }\r\n\r\n  handleRoll = (e) => {\r\n    let random = Math.random();\r\n    let res = '';\r\n\r\n    if (random <= this.state.rate) {\r\n      this.getCard(4, this.focusRoll(4, random));\r\n      res = '4'\r\n      this.setState(state => {return {four: state.four + 1, total: state.total + 1}});\r\n    } else if (random > this.state.rate && random <= this.state.rate + 0.085) {\r\n      this.getCard(3, this.focusRoll(3, random));\r\n      res = '3'\r\n      this.setState(state => {return {three: state.three + 1, total: state.total + 1}});\r\n    } else {\r\n      this.getCard(2, this.focusRoll(2, random));\r\n      res = '2';\r\n      this.setState(state => {return {two: state.two + 1, total: state.total + 1}});\r\n    }\r\n\r\n    // easter eggs\r\n    if (this.state.total === 9) {\r\n      this.setState({tsugu: tsugumoney});\r\n    }\r\n    if (this.state.total === 100) {\r\n      this.setState({whale: <img src={whale} width='20px' height='20px' alt=''/>});\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  handleRollTen = async (e) => {\r\n    await this.setState(state => {return {q: []}});\r\n    this.rollTen();\r\n  }\r\n\r\n  rollTen = () => {\r\n    // calls the roll function 10 times\r\n    let res = '';\r\n    for (let i = 0; i < 9; i++) {\r\n      res = res + ' ' + this.handleRoll();\r\n    }\r\n\r\n    // if there was already a 3*, there is no need to give a guaranteed 3*\r\n    if (res.includes('3') || res.includes('4')) {res = this.handleRoll() + res;} \r\n    else {\r\n      let random = Math.random();    \r\n      if (random <= this.state.rate) {\r\n        this.getCard(4, this.focusRoll(4, random));\r\n        this.setState(state => {return {four: state.four + 1, total: state.total + 1}});\r\n      } else {\r\n        this.getCard(3, this.focusRoll(3, random, 0.13695));\r\n        this.setState(state => {return {three: state.three + 1, total: state.total + 1}});\r\n      }\r\n    }\r\n  }\r\n\r\n  focusRoll = (n, r, m = 0.012) => {\r\n    // handle case where a focus card is rolled\r\n    // n: rarity, r = rng, m = focus rate for 3* (primarily for guaranteed 3* roll)\r\n    let rate = 0;\r\n    let focus = 'focus' + n.toString();\r\n\r\n    if (n === 4) {rate = 0.005 * this.state.focusAmount[2];} \r\n    else if (n === 3) {rate = (this.state.rate + m) * this.state.focusAmount[1];} \r\n    else {rate = (this.state.rate + 0.085 + 0.096) * this.state.focusAmount[0];}\r\n\r\n    if (r <= rate) {\r\n      this.setState(state => {\r\n        let x;\r\n        if (n === 4) {x = state.focus4;}\r\n        else if (n === 3) {x = state.focus3;}\r\n        else {x = state.focus2;}\r\n        return {[focus]: x + 1}}\r\n        )\r\n      return true;\r\n    } else {return false;}\r\n  }\r\n\r\n  handleDF = (e) => {\r\n    // double rates for dreamfes (user controlled)\r\n    let checked = e.target.checked;\r\n    if (checked) {this.setState(state => {return {rate: 0.06}});}\r\n    else {this.setState(state => {return {rate: 0.03}});}\r\n  }\r\n\r\n  handleReset = (e) => {\r\n    // reset state\r\n    this.setState({\r\n      two: 0,\r\n      three: 0,\r\n      four: 0,\r\n      total: 0,\r\n      focus4: 0,\r\n      focus3: 0,\r\n      focus2: 0,\r\n      q: [],\r\n      whale: '',\r\n      tsugu: tsugu\r\n    });\r\n  }\r\n\r\n  getCard = (rarity, focus) => {\r\n    // main function for card getting \r\n    let queue = this.state.q;\r\n\r\n    getFromGacha(rarity, focus, this.state.selectedGacha, this.state.region)\r\n      .then(url => {\r\n        if (queue.length === 10) {queue.shift()};\r\n        queue.push(\r\n          <Card image={url[0]} id={url[4]} name={url[3]} rarity={rarity} attr={url[1]} band={url[2]} />\r\n          );\r\n        this.setState({\r\n          q:queue\r\n        })\r\n      }\r\n    );\r\n  }\r\n\r\n  handleHoverIn = (e) => {\r\n    // show % rates of card rarities pulled\r\n    if (this.state.total !== 0) {\r\n      this.setState(state => {return {\r\n        two: state.two / state.total,\r\n        three: state.three / state.total,\r\n        four: state.four / state.total\r\n      }});\r\n    }\r\n    \r\n  }\r\n\r\n  handleHoverOut = (e) => {\r\n    this.setState(state => {return {\r\n      two: state.two * state.total,\r\n      three: state.three * state.total,\r\n      four: state.four * state.total\r\n    }})\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={\"App\"}>\r\n        <div className='parent'>\r\n          <div className='container stats'>\r\n            <div className='row'>\r\n              <div className='col-sm'>\r\n                <img src={this.state.tsugu} alt='' height={'75px'} />\r\n              </div>\r\n              <div className='col-5 total'>\r\n                <div>Total: {this.state.total} ({this.state.focus2 + this.state.focus3 + this.state.focus4})</div>\r\n                <div>Stars spent: {(this.state.total) * 250}&#160;{this.state.whale}</div>\r\n              </div>\r\n              <div className='col individual' onMouseEnter={this.handleHoverIn} onMouseLeave={this.handleHoverOut}>\r\n                <div>4☆: {Math.round(this.state.four * 100) / 100} ({this.state.focus4})</div>\r\n                <div>3☆: {Math.round(this.state.three * 100) / 100} ({this.state.focus3})</div>\r\n                <div>2☆: {Math.round(this.state.two * 100) / 100} ({this.state.focus2})</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='container'>\r\n            <div className='results'>{this.state.q}</div>\r\n          </div>\r\n\r\n          <div className='container gacha'>\r\n            <div className='row'>\r\n              <div className='col-sm gachabanner'>\r\n                <a href={'https://bestdori.com/info/gacha/' + this.state.selectedGacha} target='_blank' rel=\"noopener noreferrer\">\r\n                  <img src={this.state.gachaimg} alt='' height='100px' />\r\n                </a>\r\n              </div>\r\n              <div className='col gachaoptions'>\r\n                Gacha:<br/>\r\n                <select className='btn btn-sm gachalist' onChange={this.handleGacha}>\r\n                  {this.state.gachaList.map((gach) => \r\n                    <option key={gach.value} value={[gach.focus, gach.value]}>{gach.display}</option>\r\n                    )}\r\n                </select>\r\n                <br/>Server:<br/>\r\n                <select className='btn btn-sm gachalist' onChange={this.handleRegion}>\r\n                  <option value='en'>WW</option>\r\n                  <option value='jp'>JP</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='container controls'>\r\n            <div className=\"custom-switch dreamfes\">\r\n              <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultUnchecked\" onClick={this.handleDF}/>\r\n              <label className=\"custom-control-label unselectable\" htmlFor=\"defaultUnchecked\">DreamFes</label>\r\n            </div>\r\n            <button className='btn rollbutton' onClick={this.handleRoll}> Roll </button>\r\n            <button className='btn rollbutton' onClick={this.handleRollTen}> Roll 10 </button>\r\n            <button className='btn btn-secondary' onClick={this.handleReset}> Reset </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// Old Code used in development\r\n/*<button onClick={this.spark}> Spark! </button><br/>*/\r\n// spark = (e) => {\r\n//   for (var i = 0; i < 30; i++) {\r\n//     this.handleRollTen();\r\n//   }\r\n//   this.setState(state => {return {rng: 'Sparked!'}});\r\n// }","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}